$git init
$git add filename
$git status
$git commit
$git push
$git pull
$git clone


Scenario1: create branch but want to delete the branch.
=========
> git branch new-branch  #create
> git branch branch-name -D  #Delete
#to list all branches
> git branch -a
> git branch -r   #this for remote branch only
> git branch -l   # this for local branch only
> git branch --list 'my*'  #my-branch will show

Scenario2: update your local branch and check the difference with the remote branch.
==========
#go to the branch you want to check difference
> git checkout branch_name
> git fetch --all    #update your local
> git branch  or > git status    # to check which branch you are in
> git diff my-local-branch remotes/origin/master    #two different branch
> git diff master origin/master or > git diff featureA origin/next   #different local master vs remote master branch 
> git diff --name-status remote-branch local-branch   # different just the file name in the branches

Scenario3: delete and re-create branch
=========
> git branch branch-name -D
> git reset commit --hard or git reset --hard HEAD
> git branch new-branch
> git pull
or:
Delete all the files. Leave just the .git directory.
> git reset --hard HEAD
> git pull
> git push

Scenario4: force “git pull” to overwrite local files?
=========
> git fetch --all  or > git fetch origin master
> git reset --hard origin/master
# maintain current local commits by creating a branch form master before resetting.
> git checkout master
> git branch new-branch-to-save-current-commits
> git fetch --all
> git reset --hard origin/master

Scenario05: Undoing Bad commits
==========
> git log
 commit hascode1
 commit hascode2
 commit hascode3 #if you want to delete recent two commit
 
> git reset --soft Hashcode3
> git


1) goto project folder and enter
$ git init
Note: .git hidden file will be created.

2) push an existing repository from the command line
$git remote add origin gitURL.git
note: now it registared with git repository

3) $git status
it will show all files which is not in repository added yet.

4) $git add .  or $git add filename or git add -A
it will add all files, complete project.

5)$ git commit -m "commit comments"

### before commit first time you need to execute name and email for git.
$ git config --global user.name "russel"
$ git config --global user.email "russel2005@gmail.com"

### origin is the repository name
$ git remote -v
output:
origin https://github.com/russel2005/SDET.git (fetch)
origin https://github.com/russel2005/SDET.git (puch)

git
6) push the code now after commit.
$git push origin master  or $ git push -u origin master 
note: here master is the brunch name,
note: remember before push the code you need to add the permission with ssh key, other wise it will
show permission denied msg.

How to create SSH Key ?
1) goto account>settings> select "SSH and GPG keys">New SSH Key
2) enter title for SSH key name,
3) enter SSH Key
	a) how to get the SSH Key?
	url: https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh
4) click add ssh key
5) repeat the above push command and it will not showing permission denied error.


======================
how to clone or copy repository from Github in local folder
1) create a folder and go to that folder by command prompt
2)use git clone command from current folder
$ git clone gitURL

how to open clone project in eclipse?
file>import>general>existing projects>select root project directory>open>
makesure select your project under project>finish.

if gitrepository update any code of file then we need to use PULL request to get latest code from GITHUB.
7) $git pull origin master.
note: it will be copy latest code in current project from master brunch.
======================
Update your local git repo:
>git fetch --all

Build a local branch and checkout on it:
>git branch pouet && git checkout pouet

Apply the commit you want on this 
>git cherry-pick abcdefabcdef
======================

How to work with Git and GitHub in Eclipse?
1)commit
2)push
3)pull
4)Branching
5)Raising pull request(PR)
6)Approve pull request(PR)
7)Merging
